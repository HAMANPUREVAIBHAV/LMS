<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= title %></title>
    <link rel="stylesheet" href="./css/styles.css" />
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdn.jsdelivr.net/npm/quill@2.0.2/dist/quill.snow.css" rel="stylesheet" />
    <style>
      .hidden {
        display: none;
      }
    </style>
  </head>
  <body class="flex flex-col min-h-screen">
    <%- include("header.ejs") %>

    <!-- Main Content -->
    <div class="flex-grow grid grid-cols-5 gap-4 mb-4 py-4">
      <!-- Left Block (Quill Editor) -->
      <div class="col-span-4 p-4 bg-white rounded-lg shadow-md">
        <h2 id="editor-title" class="text-2xl font-semibold text-gray-700 mb-4">Edit Course Page</h2>
        <div id="editor" style="height: 400px;"></div>
        <button
          type="submit"
          class="mt-4 text-white bg-green-600 hover:bg-green-800 font-medium rounded px-5 py-2"
        >
          Save Changes
        </button>
      </div>

      <!-- Right Block (Chapter List) -->
      <div class="col-span-1 p-4 bg-gray-100 rounded-lg shadow-md">
        <h2 class="text-xl font-semibold text-gray-700 mb-4">Chapters</h2>
        <div id="chapters" class="flex flex-col">
          <!-- Existing Chapters -->
          </div>

        <!-- Add New Chapter -->
        <div class="mt-4">
          <input type="text" id="newChapterInput" placeholder="New Chapter" class="border rounded px-2 py-1 w-full text-sm">
          <button class="mt-2 bg-green-500 text-white text-sm px-2 py-1 rounded" onclick="addChapter()">Add Chapter</button>
        </div>
      </div>
    </div>

    <%- include("footer.ejs") %>
    <script src="https://cdn.jsdelivr.net/npm/quill@2.0.2/dist/quill.js"></script>
    <script>
      const quill = new Quill('#editor', {
        theme: 'snow'
      });

      // Function to toggle the visibility of pages
      function togglePages(chapterId) {
        const pagesDiv = document.getElementById(chapterId);
        if (pagesDiv.classList.contains('hidden')) {
          pagesDiv.classList.remove('hidden');
        } else {
          pagesDiv.classList.add('hidden');
        }
      }

      // Function to load the content of a page and update the editor's title
      function loadPage(pageId, pageTitle, pageContent) {
        document.getElementById('editor-title').innerText = `Edit ${pageTitle}`;
        quill.setText(pageContent);

        // You might want to store the currently edited pageId for later use (e.g., saving)
        // For example: currentEditedPageId = pageId;
      }

      // Function to add a new chapter
      function addChapter() {
        const chapterName = document.getElementById('newChapterInput').value;
        if (!chapterName) return;

        const chapterId = 'chapter' + Date.now(); // Unique ID for the chapter
        const newChapter = `
          <div class="py-2 hover:bg-gray-300 cursor-pointer chapter relative" data-chapter-id="${chapterId}" onclick="togglePages('${chapterId}')">
            <h3 class="font-medium">${chapterName}</h3>
            <div class="hidden pages ml-4" id="${chapterId}"></div>
            <div class="mt-2">
              <input type="text" placeholder="New Page" id="newPageInput-${chapterId}" class="border rounded px-2 py-1 w-full text-sm">
              <button class="mt-1 bg-blue-500 text-white text-sm px-2 py-1 rounded" onclick="addPage('${chapterId}')">Add Page</button>
            </div>
            <button class="absolute top-0 right-2 text-red-500" onclick="deleteChapter('${chapterId}')">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
                <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
          </div>
        `;

        document.getElementById('chapters').insertAdjacentHTML('beforeend', newChapter);
        document.getElementById('newChapterInput').value = ''; // Clear input field
      }

      // Function to add a new page to a chapter
      function addPage(chapterId) {
        const newPageInputId = `newPageInput-${chapterId}`;
        const pageName = document.getElementById(newPageInputId).value;
        if (!pageName) return;

        const pageId = 'page' + Date.now();
        const newPage = `
          <div class="text-sm text-gray-600 py-1 cursor-pointer relative group" data-page-id="${pageId}" onclick="loadPage('${pageId}','${pageName}', 'This is the content of ${pageName}')">
            ${pageName}
            <button class="absolute top-0 right-2 opacity-0 group-hover:opacity-100 text-red-500" onclick="deletePage('${pageId}')">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
                <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
          </div>
        `;

        // Correct way to add the page:
        document.getElementById(chapterId).insertAdjacentHTML('beforeend', newPage);

        document.getElementById(newPageInputId).value = ''; // Clear input field
      }

      // Function to delete a chapter
      function deleteChapter(chapterId) {
        const chapterElement = document.querySelector(`.chapter[data-chapter-id="${chapterId}"]`);
        if (chapterElement) {
          if (confirm(`Are you sure you want to delete this chapter?`)) {
            chapterElement.remove();
          }
        }
      }

      function deletePage(pageId) {
        const pageElement = document.querySelector(`.group[data-page-id="${pageId}"]`);
        if (pageElement) {
          if (confirm(`Are you sure you want to delete this page?`)) {
            pageElement.remove();
          }
        }
      }
    </script>
  </body>
</html>